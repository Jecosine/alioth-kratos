# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /gql/ping:
        get:
            tags:
                - Base
            operationId: Base_Ping
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PingReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HelloReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /judger/ping:
        get:
            tags:
                - Judger
            operationId: Judger_Ping
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PingJudgerReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /judger/submit:
        post:
            tags:
                - Judger
            operationId: Judger_Submit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SubmitJudgerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SubmitJudgerReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    auth/login:
        post:
            tags:
                - Auth
            operationId: Auth_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    auth/register:
        post:
            tags:
                - Auth
            operationId: Auth_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        JudgeRequestProto:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                user:
                    $ref: '#/components/schemas/UserProto'
                createdTime:
                    type: integer
                    format: int64
                sourceCode:
                    type: string
                problem:
                    $ref: '#/components/schemas/ProblemProto'
        JudgerStatus:
            type: object
            properties:
                status:
                    type: integer
                    format: int64
                currentTasksAmount:
                    type: integer
                    format: int64
                estimateTime:
                    type: number
                    format: double
            description: JudgerStatus is a struct representing running status of current judger
        LoginReply:
            type: object
            properties: {}
        LoginRequest:
            type: object
            properties: {}
        PingJudgerReply:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                data:
                    $ref: '#/components/schemas/JudgerStatus'
        PingReply:
            type: object
            properties:
                ping:
                    type: string
        ProblemProto:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                title:
                    type: string
                content:
                    type: string
                author:
                    $ref: '#/components/schemas/UserProto'
                tags:
                    type: array
                    items:
                        $ref: '#/components/schemas/TagProto'
        RegisterReply:
            type: object
            properties: {}
        RegisterRequest:
            type: object
            properties:
                payload:
                    $ref: '#/components/schemas/UserProto'
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        SubmitJudgerReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int64
                received:
                    type: string
        SubmitJudgerRequest:
            type: object
            properties:
                payload:
                    $ref: '#/components/schemas/JudgeRequestProto'
        TagProto:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
        UserProto:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                nickname:
                    type: string
                password:
                    type: string
                avatar:
                    type: string
                createdTime:
                    type: integer
                    format: int64
tags:
    - name: Auth
    - name: Base
    - name: Greeter
      description: The greeting service definition.
    - name: Judger
