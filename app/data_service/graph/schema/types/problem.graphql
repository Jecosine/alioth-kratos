type Problem {
    id: ID!
    title: String!,
    content: String!,
    author: User!,
    tags: [Tag],
    createdTime: Time!,
    solvedBy: [User]!,
}
type Tag {
    id: ID!,
    name: String!,
    problems: [Problem]!,
}
input ProblemInput {
    title: String!
    content: String!
    author: ID!
    tags: [ID]
}
input ProblemInputWithId {
    id: ID!
    title: String!
    content: String!
    author: ID!
    tags: [ID]
}
input ProblemFilter {
    tags: [ID]
}
extend type Mutation {
    addProblem(problem: ProblemInput!): Problem
    modifyProblem(problem: ProblemInputWithId!): Problem
    deleteProblem(problemId: ID!): Reply
}
extend type Query {
    getAllProblems: [Problem]!
    getProblemsWithFilter(filter: ProblemFilter): [Problem]!
}