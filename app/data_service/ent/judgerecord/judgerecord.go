// Code generated by entc, DO NOT EDIT.

package judgerecord

const (
	// Label holds the string label denoting the judgerecord type in the database.
	Label = "judge_record"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldJudgeTime holds the string denoting the judge_time field in the database.
	FieldJudgeTime = "judge_time"
	// FieldFinishedTime holds the string denoting the finished_time field in the database.
	FieldFinishedTime = "finished_time"
	// FieldTimeCost holds the string denoting the time_cost field in the database.
	FieldTimeCost = "time_cost"
	// FieldMemoryCost holds the string denoting the memory_cost field in the database.
	FieldMemoryCost = "memory_cost"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the judgerecord in the database.
	Table = "judge_records"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "users"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "judge_record_user"
)

// Columns holds all SQL columns for judgerecord fields.
var Columns = []string{
	FieldID,
	FieldJudgeTime,
	FieldFinishedTime,
	FieldTimeCost,
	FieldMemoryCost,
	FieldStatus,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int64
)
